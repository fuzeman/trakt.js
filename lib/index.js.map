{"version":3,"sources":["index.js"],"names":["Build","Version","Date","RefreshAt","RefreshDisableAt","fetch","console","error","Promise","Client","key","secret","options","application","name","version","date","debug","session","sessionKey","onSessionRefreshed","build","http","_initialized","_interfaces","_refreshing","resolve","initialize","_constructInterfaces","refresh","then","reject","Error","created_at","expires_in","warn","rem","Math","round","now","abs","_refreshSession","getSession","interfaces","result","value","Object","keys","forEach","prototype","refresh_token","redirect_uri","oauth","stack","fragments","baseUrl","split","names","shift","join"],"mappings":";;;;;;;AAAA;;AACA;;AACA;;AACA;;;;;;;;;;AAGO,IAAMA,QAAQ;AACjBC,WAAS,eADQ;AAEjBC,QAAM;AAFW,CAAd;;AAKA,IAAMC,YAAY,IAAI,EAAJ,GAAS,EAAT,GAAc,EAAhC,C,CAAqC;;;AACrC,IAAMC,mBAAmB,CAAC,EAAD,GAAM,EAAN,GAAW,EAAX,GAAgB,EAAzC,C,CAA8C;AAErD;;;;AACA,IAAG,CAAC,wBAAUC,KAAV,CAAJ,EAAsB;AAClBC,UAAQC,KAAR,CAAc,4EAAd;AACH;;AAED,IAAG,CAAC,wBAAUC,OAAV,CAAJ,EAAwB;AACpBF,UAAQC,KAAR,CAAc,gFAAd;AACH;;IAEYE,M;;;AACT,kBAAYC,GAAZ,EAAiBC,MAAjB,EAAyBC,OAAzB,EAAkC;AAAA;;AAC9BA,cAAU,0BAAYA,OAAZ,EAAqB;AAC3BC,mBAAa;AACTC,cAAM,UADG;AAETC,iBAASf,MAAMC,OAFN;AAGTe,cAAMhB,MAAME;AAHH,OADc;AAO3Be,aAAO,KAPoB;AAS3BC,eAAS,IATkB;AAU3BC,kBAAY,IAVe;AAW3BC,0BAAoB;AAXO,KAArB,CAAV,CAD8B,CAe9B;;AACA,SAAKV,GAAL,GAAWA,OAAO,IAAlB;AACA,SAAKC,MAAL,GAAcA,UAAU,IAAxB,CAjB8B,CAmB9B;;AACA,SAAKO,OAAL,GAAe,IAAf;;AAEA,QAAG,wBAAUN,QAAQM,OAAlB,CAAH,EAA+B;AAC3B,WAAKA,OAAL,GAAeN,QAAQM,OAAvB;AACH,KAFD,MAEO,IAAG,wBAAUN,QAAQO,UAAlB,CAAH,EAAkC;AACrC,WAAKD,OAAL,GAAe;AAACR,aAAKE,QAAQO;AAAd,OAAf;AACH,KA1B6B,CA4B9B;;;AACA,SAAKC,kBAAL,GAA0BR,QAAQQ,kBAAlC,CA7B8B,CA+B9B;;AACA,SAAKP,WAAL,GAAmBD,QAAQC,WAA3B;AACA,SAAKQ,KAAL,GAAarB,KAAb;AACA,SAAKiB,KAAL,GAAaL,QAAQK,KAArB;AAEA,SAAKK,IAAL,GAAY,IAAZ,CApC8B,CAsC9B;;AACA,SAAKC,YAAL,GAAoB,KAApB;AACA,SAAKC,WAAL,GAAmB,EAAnB;AACA,SAAKC,WAAL,GAAmBjB,QAAQkB,OAAR,EAAnB,CAzC8B,CA2C9B;;AACA,SAAKC,UAAL;AACH;;;;iCAEY;AACT,UAAG,KAAKJ,YAAR,EAAsB;AAClB;AACH,OAHQ,CAKT;;;AACA,WAAKD,IAAL,GAAY,kBAAe,IAAf,CAAZ,CANS,CAQT;;AACA,WAAKE,WAAL,GAAmB,KAAKI,oBAAL,qBAAnB,CATS,CAWT;;AACA,WAAKL,YAAL,GAAoB,IAApB;AACH;;;AA8BD;AAEA;+BAEWX,O,EAAS;AAAA;;AAChBA,gBAAU,0BAAYA,OAAZ,EAAqB;AAC3BiB,iBAAS;AADkB,OAArB,CAAV;AAIA,aAAO,KAAKJ,WAAL,CAAiBK,IAAjB,CAAsB,YAAM;AAC/B,YAAIZ,UAAU,MAAKA,OAAnB;;AAEA,YAAG,CAAC,wBAAUA,OAAV,CAAJ,EAAwB;AACpB,iBAAOV,QAAQuB,MAAR,CAAe,IAAIC,KAAJ,CAAU,sBAAV,CAAf,CAAP;AACH;;AAED,YAAG,yBAAWd,OAAX,CAAH,EAAwB;AACpBA,oBAAUA,SAAV;AACH,SAT8B,CAW/B;;;AACA,eAAOV,QAAQkB,OAAR,CAAgBR,OAAhB,EAAyBY,IAAzB,CAA8B,UAACZ,OAAD,EAAa;AAC9C,cAAG,CAAC,wBAAUA,OAAV,CAAJ,EAAwB;AACpB,mBAAOV,QAAQuB,MAAR,CAAe,IAAIC,KAAJ,CAAU,sBAAV,CAAf,CAAP;AACH;;AAED,cAAG,CAAC,wBAAUd,QAAQe,UAAlB,CAAD,IAAkC,CAAC,wBAAUf,QAAQgB,UAAlB,CAAtC,EAAqE;AACjE5B,oBAAQ6B,IAAR,CAAa,yEAAb;AACH,WAP6C,CAS9C;;;AACA,cAAIC,MAAMC,KAAKC,KAAL,CAAYpB,QAAQe,UAAR,GAAqBf,QAAQgB,UAA9B,GAA6ChC,KAAKqC,GAAL,KAAa,IAArE,CAAV;;AAEA,cAAGH,MAAMjC,SAAT,EAAoB;AAChB;AACA,gBAAG,CAAC,wBAAU,MAAKiB,kBAAf,CAAJ,EAAwC;AACpCd,sBAAQ6B,IAAR,CACI,2FADJ,EAEIE,KAAKC,KAAL,CAAWF,GAAX,CAFJ;AAIH;AACJ,WARD,MAQO;AACH,gBAAGA,MAAMhC,gBAAT,EAA2B;AACvB;AACA,qBAAOI,QAAQuB,MAAR,CAAe,IAAIC,KAAJ,CAClB,qBAAqBK,KAAKC,KAAL,CAAWD,KAAKG,GAAL,CAASJ,GAAT,CAAX,CAArB,GAAiD,gBAD/B,CAAf,CAAP;AAGH;;AAED,gBAAG,CAAC,wBAAU,MAAKhB,kBAAf,CAAJ,EAAwC;AACpC,kBAAGgB,MAAM,CAAT,EAAY;AACR;AACA,uBAAO5B,QAAQuB,MAAR,CAAe,IAAIC,KAAJ,CAClB,qBAAqBK,KAAKC,KAAL,CAAWD,KAAKG,GAAL,CAASJ,GAAT,CAAX,CAArB,GAAiD,gBAD/B,CAAf,CAAP;AAGH;;AAED9B,sBAAQ6B,IAAR,CAAa,iFAAb;AACA,qBAAOjB,OAAP;AACH;;AAED,gBAAGkB,MAAM,CAAT,EAAY;AACR;AACA9B,sBAAQ6B,IAAR,CAAa,qBAAqBE,KAAKC,KAAL,CAAWD,KAAKG,GAAL,CAASJ,GAAT,CAAX,CAArB,GAAiD,gBAA9D;AACH;;AAED,gBAAG,CAACxB,QAAQiB,OAAZ,EAAqB;AACjBvB,sBAAQ6B,IAAR,CAAa,iCAAb;AACA,qBAAOjB,OAAP;AACH,aA5BE,CA8BH;;;AACA,kBAAKO,WAAL,GAAmB,MAAKgB,eAAL,CAAqBvB,OAArB,CAAnB,CA/BG,CAiCH;;AACA,mBAAO,MAAKO,WAAL,CAAiBK,IAAjB,CAAsB,YAAM;AAC/B,qBAAO,MAAKY,UAAL,CAAgB;AACnBb,yBAAS;AADU,eAAhB,CAAP;AAGH,aAJM,CAAP;AAKH,WA3D6C,CA6D9C;;;AACA,iBAAOX,OAAP;AACH,SA/DM,CAAP;AAgEH,OA5EM,CAAP;AA6EH,K,CAED;AAEA;;;;yCAEqByB,U,EAAY;AAAA;;AAC7B,UAAIC,SAAS,EAAb;AACA,UAAIC,KAAJ;AAEAC,aAAOC,IAAP,CAAYJ,UAAZ,EAAwBK,OAAxB,CAAgC,UAACtC,GAAD,EAAS;AACrCmC,gBAAQF,WAAWjC,GAAX,CAAR;;AAEA,YAAGmC,MAAMI,SAAN,yBAAH,EAAyC;AACrCL,iBAAOlC,GAAP,IAAc,IAAImC,KAAJ,QAAd,CADqC,CACL;AACnC,SAFD,MAEO;AACHD,iBAAOlC,GAAP,IAAc,OAAKkB,oBAAL,CAA0BiB,KAA1B,CAAd;AACH;AACJ,OARD;AAUA,aAAOD,MAAP;AACH;;;oCAEe1B,O,EAAS;AAAA;;AACrB,UAAG,CAAC,wBAAUA,OAAV,CAAD,IAAuB,CAAC,wBAAUA,QAAQgC,aAAlB,CAA3B,EAA6D;AACzD;AACA,eAAO1C,QAAQuB,MAAR,CAAe,IAAIC,KAAJ,CAClB,qEADkB,CAAf,CAAP;AAGH;;AAED,UAAG,CAAC,wBAAUd,QAAQiC,YAAlB,CAAJ,EAAqC;AACjC7C,gBAAQ6B,IAAR,CAAa,mFAAb;AACH;;AAED,UAAG,CAAC,wBAAU,KAAKf,kBAAf,CAAJ,EAAwC;AACpC,eAAOZ,QAAQuB,MAAR,CAAe,IAAIC,KAAJ,CAClB,iFADkB,CAAf,CAAP;AAGH,OAhBoB,CAkBrB;;;AACA,aAAO,KAAKoB,KAAL,CAAWvB,OAAX,CAAmBX,QAAQgC,aAA3B,EAA0ChC,QAAQiC,YAAlD,EAAgErB,IAAhE,CAAqE,UAACZ,OAAD,EAAa;AACrF,YAAG,CAAC,wBAAU,OAAKE,kBAAf,CAAJ,EAAwC;AACpC;AACH,SAHoF,CAKrF;;;AACA,eAAKA,kBAAL,CAAwBF,OAAxB;AACH,OAPM,EAOJ,UAACX,KAAD,EAAW;AACVD,gBAAQC,KAAR,CAAc,4BAAd,EAA4CA,MAAM8C,KAAlD;AACH,OATM,CAAP;AAUH,K,CAED;;;;wBAxKc;AACV,UAAIC,YAAY,KAAKhC,IAAL,CAAUiC,OAAV,CAAkBC,KAAlB,CAAwB,KAAxB,CAAhB;AAAA,UACIC,QAAQH,UAAU,CAAV,EAAaE,KAAb,CAAmB,GAAnB,CADZ,CADU,CAIV;;AACAC,YAAMC,KAAN;AAEA,aAAO,CAACJ,UAAU,CAAV,CAAD,EAAeG,MAAME,IAAN,CAAW,GAAX,CAAf,EAAgCA,IAAhC,CAAqC,KAArC,CAAP;AACH,K,CAED;;;;wBAEY;AACR,aAAO,KAAKnC,WAAL,CAAiB,OAAjB,CAAP;AACH;;;wBAEW;AACR,aAAO,KAAKA,WAAL,CAAiB,OAAjB,CAAP;AACH;;;wBAEc;AACX,aAAO,KAAKA,WAAL,CAAiB,UAAjB,CAAP;AACH;;;wBAEY;AACT,aAAO,KAAKA,WAAL,CAAiB,QAAjB,CAAP;AACH","file":"index.js","sourcesContent":["import {isDefined, isFunction, setDefaults} from './core/helpers';\r\nimport HttpClient from './core/http';\r\nimport Interfaces from './interfaces';\r\nimport Interface from './interfaces/base';\r\n\r\n\r\nexport const Build = {\r\n    Version: '2.0.0-alpha.2',\r\n    Date: '2016-10-01'\r\n};\r\n\r\nexport const RefreshAt = 7 * 24 * 60 * 60;  // Refresh token one week before expiry\r\nexport const RefreshDisableAt = -28 * 24 * 60 * 60;  // Disable refresh attempts after four weeks\r\n\r\n// Validate environment\r\nif(!isDefined(fetch)) {\r\n    console.error('\"fetch\" is not available, include whatwg-fetch to support this environment');\r\n}\r\n\r\nif(!isDefined(Promise)) {\r\n    console.error('\"Promise\" is not available, include babel-polyfill to support this environment');\r\n}\r\n\r\nexport class Client {\r\n    constructor(key, secret, options) {\r\n        options = setDefaults(options, {\r\n            application: {\r\n                name: 'trakt.js',\r\n                version: Build.Version,\r\n                date: Build.Date\r\n            },\r\n\r\n            debug: false,\r\n\r\n            session: null,\r\n            sessionKey: null,\r\n            onSessionRefreshed: null\r\n        });\r\n\r\n        // Application keys\r\n        this.key = key || null;\r\n        this.secret = secret || null;\r\n\r\n        // Session\r\n        this.session = null;\r\n\r\n        if(isDefined(options.session)) {\r\n            this.session = options.session;\r\n        } else if(isDefined(options.sessionKey)) {\r\n            this.session = {key: options.sessionKey};\r\n        }\r\n\r\n        // Callbacks\r\n        this.onSessionRefreshed = options.onSessionRefreshed;\r\n\r\n        // Public variables\r\n        this.application = options.application;\r\n        this.build = Build;\r\n        this.debug = options.debug;\r\n\r\n        this.http = null;\r\n\r\n        // Private variables\r\n        this._initialized = false;\r\n        this._interfaces = {};\r\n        this._refreshing = Promise.resolve();\r\n\r\n        // Initialize client\r\n        this.initialize();\r\n    }\r\n\r\n    initialize() {\r\n        if(this._initialized) {\r\n            return;\r\n        }\r\n\r\n        // Construct http client\r\n        this.http = new HttpClient(this);\r\n\r\n        // Construct interfaces\r\n        this._interfaces = this._constructInterfaces(Interfaces);\r\n\r\n        // Mark client as initialized\r\n        this._initialized = true;\r\n    }\r\n\r\n    get siteUrl() {\r\n        var fragments = this.http.baseUrl.split('://'),\r\n            names = fragments[1].split('.');\r\n\r\n        // Remove first name ('api' or 'api-v2launch')\r\n        names.shift();\r\n\r\n        return [fragments[0], names.join('.')].join('://');\r\n    }\r\n\r\n    // region Interfaces\r\n\r\n    get users() {\r\n        return this._interfaces['users'];\r\n    }\r\n\r\n    get oauth() {\r\n        return this._interfaces['oauth'];\r\n    }\r\n\r\n    get scrobble() {\r\n        return this._interfaces['scrobble'];\r\n    }\r\n\r\n    get search() {\r\n        return this._interfaces['search'];\r\n    }\r\n\r\n    // endregion\r\n\r\n    // region Public methods\r\n\r\n    getSession(options) {\r\n        options = setDefaults(options, {\r\n            refresh: true\r\n        });\r\n\r\n        return this._refreshing.then(() => {\r\n            var session = this.session;\r\n\r\n            if(!isDefined(session)) {\r\n                return Promise.reject(new Error('No session available'));\r\n            }\r\n\r\n            if(isFunction(session)) {\r\n                session = session();\r\n            }\r\n\r\n            // Resolve session\r\n            return Promise.resolve(session).then((session) => {\r\n                if(!isDefined(session)) {\r\n                    return Promise.reject(new Error('No session available'));\r\n                }\r\n\r\n                if(!isDefined(session.created_at) || !isDefined(session.expires_in)) {\r\n                    console.warn('Missing session expiry properties, unable to determine session validity');\r\n                }\r\n\r\n                // Calculate seconds to/since session expire time\r\n                let rem = Math.round((session.created_at + session.expires_in) - (Date.now() / 1000));\r\n\r\n                if(rem > RefreshAt) {\r\n                    // Ensure the \"onSessionRefreshed\" callback has been defined\r\n                    if(!isDefined(this.onSessionRefreshed)) {\r\n                        console.warn(\r\n                            'onSessionRefreshed callback hasn\\'t been implemented, session will expire in %d second(s)',\r\n                            Math.round(rem)\r\n                        );\r\n                    }\r\n                } else {\r\n                    if(rem < RefreshDisableAt) {\r\n                        // Session has expired, and no `onSessionRefreshed` callback has been defined\r\n                        return Promise.reject(new Error(\r\n                            'Session expired ' + Math.round(Math.abs(rem)) + ' second(s) ago'\r\n                        ));\r\n                    }\r\n\r\n                    if(!isDefined(this.onSessionRefreshed)) {\r\n                        if(rem < 0) {\r\n                            // Session has expired\r\n                            return Promise.reject(new Error(\r\n                                'Session expired ' + Math.round(Math.abs(rem)) + ' second(s) ago'\r\n                            ));\r\n                        }\r\n\r\n                        console.warn('onSessionRefreshed callback hasn\\'t been implemented, unable to refresh session');\r\n                        return session;\r\n                    }\r\n\r\n                    if(rem < 0) {\r\n                        // Session has expired, and no `onSessionRefreshed` callback has been defined\r\n                        console.warn('Session expired ' + Math.round(Math.abs(rem)) + ' second(s) ago');\r\n                    }\r\n\r\n                    if(!options.refresh) {\r\n                        console.warn('Token refresh has been disabled');\r\n                        return session;\r\n                    }\r\n\r\n                    // Refresh authentication token\r\n                    this._refreshing = this._refreshSession(session);\r\n\r\n                    // Wait for token to refresh, then try retrieve the session again\r\n                    return this._refreshing.then(() => {\r\n                        return this.getSession({\r\n                            refresh: false\r\n                        });\r\n                    });\r\n                }\r\n\r\n                // Return current session\r\n                return session;\r\n            });\r\n        });\r\n    }\r\n\r\n    // endregion\r\n\r\n    // region Private methods\r\n\r\n    _constructInterfaces(interfaces) {\r\n        var result = {};\r\n        var value;\r\n\r\n        Object.keys(interfaces).forEach((key) => {\r\n            value = interfaces[key];\r\n\r\n            if(value.prototype instanceof Interface) {\r\n                result[key] = new value(this);  // eslint-disable-line new-cap\r\n            } else {\r\n                result[key] = this._constructInterfaces(value);\r\n            }\r\n        });\r\n\r\n        return result;\r\n    }\r\n\r\n    _refreshSession(session) {\r\n        if(!isDefined(session) || !isDefined(session.refresh_token)) {\r\n            // Unable to refresh session\r\n            return Promise.reject(new Error(\r\n                'Unable to refresh session, no \"refresh_token\" property is available'\r\n            ));\r\n        }\r\n\r\n        if(!isDefined(session.redirect_uri)) {\r\n            console.warn('Session has no \"redirect_uri\" property, defaulting to \"urn:ietf:wg:oauth:2.0:oob\"');\r\n        }\r\n\r\n        if(!isDefined(this.onSessionRefreshed)) {\r\n            return Promise.reject(new Error(\r\n                'Unable to refresh session, onSessionRefreshed callback hasn\\'t been implemented'\r\n            ));\r\n        }\r\n\r\n        // Refresh session\r\n        return this.oauth.refresh(session.refresh_token, session.redirect_uri).then((session) => {\r\n            if(!isDefined(this.onSessionRefreshed)) {\r\n                return;\r\n            }\r\n\r\n            // Fire \"onSessionRefreshed\" callback\r\n            this.onSessionRefreshed(session);\r\n        }, (error) => {\r\n            console.error('Unable to refresh session:', error.stack);\r\n        });\r\n    }\r\n\r\n    // endregion\r\n}\r\n"],"sourceRoot":"/source/"}