{"version":3,"sources":["index.js"],"names":["Client","key","secret","options","session","sessionKey","http","_interfaces","_constructInterfaces","interfaces","result","value","Object","keys","forEach","prototype","fragments","baseUrl","split","names","shift","join"],"mappings":";;;;;;;;;AAAA;;AACA;;;;AACA;;;;AACA;;;;;;;;IAEaA,M,WAAAA,M;AACT,oBAAYC,GAAZ,EAAiBC,MAAjB,EAAyBC,OAAzB,EAAkC;AAAA;;AAC9BA,kBAAU,wBAAUA,OAAV,IAAqBA,OAArB,GAA+B,EAAzC;;AAEA,aAAKF,GAAL,GAAWA,OAAO,IAAlB;AACA,aAAKC,MAAL,GAAcA,UAAU,IAAxB;;AAEA,aAAKE,OAAL,GAAe,IAAf;;AAEA,YAAG,wBAAUD,QAAQC,OAAlB,CAAH,EAA+B;AAC3B,iBAAKA,OAAL,GAAeD,QAAQC,OAAvB;AACH,SAFD,MAEO,IAAG,wBAAUD,QAAQE,UAAlB,CAAH,EAAkC;AACrC,iBAAKD,OAAL,GAAe,EAACH,KAAKE,QAAQE,UAAd,EAAf;AACH;;AAED;AACA,aAAKC,IAAL,GAAY,mBAAe,IAAf,CAAZ;;AAEA;AACA,aAAKC,WAAL,GAAmB,KAAKC,oBAAL,sBAAnB;AACH;;;;wCA4Be;AACZ,gBAAG,CAAC,wBAAU,KAAKJ,OAAf,CAAD,IAA4B,CAAC,wBAAU,KAAKA,OAAL,CAAaH,GAAvB,CAAhC,EAA6D;AACzD,uBAAO,IAAP;AACH;;AAED,mBAAO,KAAKG,OAAL,CAAaH,GAApB;AACH;;;6CAEoBQ,U,EAAY;AAAA;;AAC7B,gBAAIC,SAAS,EAAb;AACA,gBAAIC,KAAJ;;AAEAC,mBAAOC,IAAP,CAAYJ,UAAZ,EAAwBK,OAAxB,CAAgC,UAACb,GAAD,EAAS;AACrCU,wBAAQF,WAAWR,GAAX,CAAR;;AAEA,oBAAGU,MAAMI,SAAN,0BAAH,EAAyC;AACrCL,2BAAOT,GAAP,IAAc,IAAIU,KAAJ,OAAd,CADqC,CACL;AACnC,iBAFD,MAEO;AACHD,2BAAOT,GAAP,IAAc,MAAKO,oBAAL,CAA0BG,KAA1B,CAAd;AACH;AACJ,aARD;;AAUA,mBAAOD,MAAP;AACH;;;4BAjDa;AACV,gBAAIM,YAAY,KAAKV,IAAL,CAAUW,OAAV,CAAkBC,KAAlB,CAAwB,KAAxB,CAAhB;AAAA,gBACIC,QAAQH,UAAU,CAAV,EAAaE,KAAb,CAAmB,GAAnB,CADZ;;AAGA;AACAC,kBAAMC,KAAN;;AAEA,mBAAO,CAACJ,UAAU,CAAV,CAAD,EAAeG,MAAME,IAAN,CAAW,GAAX,CAAf,EAAgCA,IAAhC,CAAqC,KAArC,CAAP;AACH;;;4BAEW;AACR,mBAAO,KAAKd,WAAL,CAAiB,OAAjB,CAAP;AACH;;;4BAEW;AACR,mBAAO,KAAKA,WAAL,CAAiB,OAAjB,CAAP;AACH;;;4BAEc;AACX,mBAAO,KAAKA,WAAL,CAAiB,UAAjB,CAAP;AACH;;;4BAEY;AACT,mBAAO,KAAKA,WAAL,CAAiB,QAAjB,CAAP;AACH","file":"index.js","sourcesContent":["import {isDefined} from './core/helpers';\r\nimport HttpClient from './core/http';\r\nimport Interfaces from './interfaces';\r\nimport Interface from './interfaces/base';\r\n\r\nexport class Client {\r\n    constructor(key, secret, options) {\r\n        options = isDefined(options) ? options : {};\r\n\r\n        this.key = key || null;\r\n        this.secret = secret || null;\r\n\r\n        this.session = null;\r\n\r\n        if(isDefined(options.session)) {\r\n            this.session = options.session;\r\n        } else if(isDefined(options.sessionKey)) {\r\n            this.session = {key: options.sessionKey};\r\n        }\r\n\r\n        // Construct http client\r\n        this.http = new HttpClient(this);\r\n\r\n        // Construct interfaces\r\n        this._interfaces = this._constructInterfaces(Interfaces);\r\n    }\r\n\r\n    get siteUrl() {\r\n        var fragments = this.http.baseUrl.split('://'),\r\n            names = fragments[1].split('.');\r\n\r\n        // Remove first name ('api' or 'api-v2launch')\r\n        names.shift();\r\n\r\n        return [fragments[0], names.join('.')].join('://');\r\n    }\r\n\r\n    get users() {\r\n        return this._interfaces['users'];\r\n    }\r\n\r\n    get oauth() {\r\n        return this._interfaces['oauth'];\r\n    }\r\n\r\n    get scrobble() {\r\n        return this._interfaces['scrobble'];\r\n    }\r\n\r\n    get search() {\r\n        return this._interfaces['search'];\r\n    }\r\n\r\n    getSessionKey() {\r\n        if(!isDefined(this.session) || !isDefined(this.session.key)) {\r\n            return null;\r\n        }\r\n\r\n        return this.session.key;\r\n    }\r\n\r\n    _constructInterfaces(interfaces) {\r\n        var result = {};\r\n        var value;\r\n\r\n        Object.keys(interfaces).forEach((key) => {\r\n            value = interfaces[key];\r\n\r\n            if(value.prototype instanceof Interface) {\r\n                result[key] = new value(this);  // eslint-disable-line new-cap\r\n            } else {\r\n                result[key] = this._constructInterfaces(value);\r\n            }\r\n        });\r\n\r\n        return result;\r\n    }\r\n}\r\n"],"sourceRoot":"/source/"}